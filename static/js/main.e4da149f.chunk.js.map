{"version":3,"sources":["Me.js","Report.js","Report2.js","Report3.js","components/Form.js","Kmom03.js","components/Logg.js","LoggaIn.js","components/CreateUpdate.js","App.js","serviceWorker.js","index.js"],"names":["Me","text","Report","props","state","fetch","then","response","json","data","setState","className","href","source","this","Component","Report2","Report3","Form","handleChangeName","event","name","target","value","i","length","isNaN","nameError","handleChangeEmail","email","includes","emailError","handleChangePassword","password","passwordError","handleYear","chosenYear","handleMonth","chosenMonth","handleDay","chosenDay","handleSubmit","preventDefault","computePost","console","log","submitError","year","month","day","adress","hits","submitta","method","headers","body","JSON","stringify","submitted","submitted_user_exist","forceUpdate","varYear","varDay","x","push","id","toString","yearList","map","item","key","monthList","dayList","onSubmit","noValidate","htmlFor","type","placehodler","onChange","style","color","Kmom03","Logg","responseData","token","sessionStorage","setItem","testing","getItem","LoggaIn","CreateUpdate","week","token_test","App","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4da149f.chunk.js","sourcesContent":["import React from 'react';\n// import React, { useEffect, useState } from 'react';\n\nconst Me = () => {\n  // const [message, setMessage] = useState('');\n\n  // useEffect(() => {\n  //   fetch('https://me-api.jsramverk.me')\n  //     .then(res => res.json())\n  //     .then(res => setMessage(res.description));\n  // });\n\n\n  var text = {\n      title: 'Me',\n      body: 'Hej! Introduktion om mig!'\n  }\n\n  return (\n    <main>\n      <h3>{text.title}</h3>\n      <p>{text.body}</p>\n    </main>\n  );\n};\n\nexport default Me;\n","import React, { Component } from 'react'\nimport ReactMarkdown from 'react-markdown'\n\n\nclass Report extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      text: null\n    }\n  }\n\n  //SPARA!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!?\n  // //hämtar fån textfil skriven i markdown\n  // componentWillMount() {\n  //   // Get the contents from the Markdown file and put them in the React state, so we can reference it in render() below.\n  //   fetch(readme).then((response) => response.text()).then((text) => {\n  //     this.setState({ termz: text })\n  //   })\n  // }\n\n  componentDidMount() {\n    // Simple GET request using fetch\n    fetch('https://me-api.thisisabad.site/reports/week/1')\n        .then(response => response.json())\n        .then(data => this.setState({ text: data.text }));\n  }\n\n\n  render() {\n    return (\n      <div className=\"content\">\n        <h3><a href=\"https://github.com/knasenn/jsramverk\">Github link</a></h3>\n        <ReactMarkdown source={ this.state.text } />\n      </div>\n    )\n  }\n}\n\nexport default Report\n","import React, { Component } from 'react'\nimport ReactMarkdown from 'react-markdown'\n\n// import DatePicker from './components/DatePicker.js'\n\n\n\nclass Report2 extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      text: null\n    }\n  }\n\n  //SPARA!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!?\n  // //hämtar fån textfil skriven i markdown\n  // componentWillMount() {\n  //   // Get the contents from the Markdown file and put them in the React state, so we can reference it in render() below.\n  //   fetch(readme).then((response) => response.text()).then((text) => {\n  //     this.setState({ termz: text })\n  //   })\n  // }\n\n  componentDidMount() {\n    // Simple GET request using fetch\n    fetch('https://me-api.thisisabad.site/reports/week/2')\n        .then(response => response.json())\n        .then(data => this.setState({ text: data.text }));\n  }\n\n\n  render() {\n    return (\n      <div className=\"content\">\n        <h3><a href=\"https://github.com/knasenn/jsramverk\">Github link</a></h3>\n        <ReactMarkdown source={ this.state.text } />\n      </div>\n    )\n  }\n}\n\nexport default Report2\n","import React, { Component } from 'react'\nimport ReactMarkdown from 'react-markdown'\n\n// import DatePicker from './components/DatePicker.js'\n\n\n\nclass Report3 extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      text: null\n    }\n  }\n\n  //SPARA!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!?\n  // //hämtar fån textfil skriven i markdown\n  // componentWillMount() {\n  //   // Get the contents from the Markdown file and put them in the React state, so we can reference it in render() below.\n  //   fetch(readme).then((response) => response.text()).then((text) => {\n  //     this.setState({ termz: text })\n  //   })\n  // }\n\n  componentDidMount() {\n    // Simple GET request using fetch\n    fetch('https://me-api.thisisabad.site/reports/week/3')\n        .then(response => response.json())\n        .then(data => this.setState({ text: data.text }));\n  }\n\n\n  render() {\n    return (\n      <div className=\"content\">\n        <h3><a href=\"https://github.com/knasenn/jsramverk\">Github link</a></h3>\n        <ReactMarkdown source={ this.state.text } />\n      </div>\n    )\n  }\n}\n\nexport default Report3\n","import React, { Component } from 'react'\n\n\nclass Form extends Component {\n  //Constructor\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      chosenYear: '1900',\n      chosenMonth: 'Januari',\n      chosenDay: '1',\n      nameError: '',\n      emailError: '',\n      passwordError: '',\n      submitError: '',\n      year: [],\n      month: [],\n      day: [],\n      adress: \"localhost:8333\",\n      data: null,\n      hits: [],\n      submitta: 0\n    };\n  }\n\n  //PART 1\n  //Checks if name is OK\n  handleChangeName = (event) => {\n    this.setState({ name: event.target.value });\n    // console.log(this.state.name);\n\n    for (var i = 0; i < this.state.name.length; i++) {\n      if (isNaN(this.state.name[i]) === true) {\n        this.setState({ nameError: \"\" });\n      } else {\n        this.setState({ nameError: \"Endas bokstäver\" });\n        break;\n      }\n    }\n  }\n\n  //Checks if email is OK\n  handleChangeEmail = (event) => {\n    // console.log(event.target.value);\n    this.setState({ email: event.target.value });\n    // console.log(this.state.email);\n\n    for (var i = 0; i < this.state.email.length; i++) {\n      if (this.state.email[i].includes(\"@\") !== true) {\n        this.setState({ emailError: \"Måste finnas @\" });\n      } else {\n        this.setState({ emailError: \"\" });\n        break;\n      }\n    }\n  }\n\n  //Checks if password is OK\n  handleChangePassword = (event) => {\n    // console.log(event.target.value);\n    this.setState({ password: event.target.value });\n    // console.log(this.state.password);\n    if (this.state.password.length > 11) {\n      this.setState({ passwordError: \"Max 10 bokstäver\" });\n    } else {\n      this.setState({ passwordError: \"\" });\n    }\n  }\n\n  //Sets value for year\n  handleYear = (event) => {\n    this.setState({chosenYear: event.target.value});\n  }\n\n  //Sets value for month\n  handleMonth = (event) => {\n    this.setState({chosenMonth: event.target.value});\n  }\n\n  //Sets value for day\n  handleDay = (event) => {\n    this.setState({chosenDay: event.target.value});\n  }\n\n  //Executes on submit\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(\"-this.state\");\n    // console.log(this.state);\n    // console.log(\"-this.state\");\n\n    if (\n      this.state.nameError === \"\" &&\n      this.state.emailError === \"\" &&\n      this.state.passwordError === \"\" &&\n      this.state.name !== \"\" &&\n      this.state.email !== \"\" &&\n      this.state.password !== \"\") {\n      this.computePost()\n\n    } else {\n      console.log(\"nein\");\n    }\n  }\n\n\n\n\n\n  async computePost() {\n    console.log(this.state.name);\n    console.log(this.state.email);\n    console.log(this.state.password);\n    console.log(this.state.chosenYear);\n    console.log(this.state.chosenMonth);\n    console.log(this.state.chosenDay);\n    console.log(\"*compPostX200!*\");\n    //http://localhost:8333/logg\n    //https://webhook.site/7ec34c58-bff5-4050-9201-4f83ab6dd210\n    try {\n        await fetch('https://me-api.thisisabad.site/register', {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              name: this.state.name,\n              email: this.state.email,\n              password: this.state.password,\n              year: this.state.chosenYear,\n              month: this.state.chosenMonth,\n              day: this.state.chosenDay\n            })\n        }).then(this.submitted());\n    } catch(err) {\n        console.log(\"*error*\");\n        console.log(err);\n        console.log(\"**catch**\");\n        this.submitted_user_exist()\n    }\n  }\n\n\n  submitted() {\n    this.setState({\n      submitta: 1\n    })\n    this.forceUpdate();\n  }\n\n\n\n\n\n  // submit_form() {\n  //   console.log(\"yehawzzz!!!\");\n  //   console.log(this.state);\n  //   this.compPost()\n  //   console.log(\"yehawzzz!!!\");\n  // }\n\n  //PART 2\n  //Creates arrays with years and days\n  componentDidMount() {\n    var varYear = [];\n    var varDay = [];\n\n    //creates data for the year list\n    for (let i = 1900; i <= 2019; i++) {\n        let x = 1;\n        varYear.push({id: x, name: i.toString()});\n        x++;\n    }\n    //creates data for the day list\n    for (let i = 1; i <= 31; i++) {\n        let x = 1;\n        varDay.push({id: x, name: i.toString()});\n        x++;\n    }\n    //creates data for the month lists\n    this.setState({\n      year: varYear,\n      month: [\n        {id: '1', name: 'Januari'},\n        {id: '2', name: 'Februari'},\n        {id: '3', name: 'Mars'},\n        {id: '3', name: 'April'},\n        {id: '3', name: 'Maj'},\n        {id: '3', name: 'Juni'},\n        {id: '3', name: 'Juli'},\n        {id: '3', name: 'Augusti'},\n        {id: '3', name: 'September'},\n        {id: '3', name: 'Oktober'},\n        {id: '3', name: 'November'},\n        {id: '3', name: 'December'}\n      ],\n      day: varDay\n    })\n  }\n\n\n\n\n\n  render() {\n    //Creates the lists\n    const { year } = this.state;\n    const { month } = this.state;\n    const { day } = this.state;\n    // console.log(\"*asdasdasd*\");\n    // console.log(this.state);\n    // console.log(\"+asdasdasd+\");\n\n    let yearList = year.map((item, i) => {\n      return (\n        <option key={i} value={item.name} >{item.name}</option>\n      )\n    });\n\n    let monthList = month.map((item, i) => {\n      return (\n        <option key={i} value={item.name} >{item.name}</option>\n      )\n    });\n\n    let dayList = day.map((item, i) => {\n      return (\n        <option key={i} value={item.name}>{item.name}</option>\n      )\n    });\n\n    //Draws out the form\n    if (this.state.submitta === 0) {\n      return (\n        <div className=\"form-wrapper\">\n          <div>\n            <h4>Create Account</h4>\n            <form onSubmit={this.handleSubmit} noValidate method=\"post\">\n              <div className=\"name\">\n                <label htmlFor=\"name\">Name</label>\n                <input\n                  type=\"text\"\n                  className=\"mytext\"\n                  placehodler=\"Name\"\n                  name=\"name\"\n                  onChange={this.handleChangeName}\n                  value={this.state.name}\n                />\n                <div style={{ color: \"red\" }}>{this.state.nameError}</div>\n              </div>\n\n              <div className=\"email\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  className=\"mytext\"\n                  placehodler=\"Email\"\n                  name=\"email\"\n                  onChange={this.handleChangeEmail}\n                  value={this.state.email}\n                />\n                <div style={{ color: \"red\" }}>{this.state.emailError}</div>\n              </div>\n\n              <div className=\"password\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"mytext\"\n                  placehodler=\"Password\"\n                  name=\"password\"\n                  onChange={this.handleChangePassword}\n                />\n                <div style={{ color: \"red\" }}>{this.state.passwordError}</div>\n              </div>\n\n\n              <div className=\"date\">\n                <label htmlFor=\"date\">Birthday</label>\n                <div>\n                  <select\n                    type=\"text\"\n                    className=\"myDate\"\n                    onChange={this.handleYear}\n                  >\n                    {yearList}\n                  </select>\n                  <select\n                    type=\"text\"\n                    className=\"myDate\"\n                    onChange={this.handleMonth}\n                  >\n                    {monthList}\n                  </select>\n                  <select\n                    type=\"text\"\n                    className=\"myDate\"\n                    onChange={this.handleDay}\n                  >\n                    {dayList}\n                  </select>\n                </div>\n              </div>\n\n\n              <div className=\"createAccount\">\n\n                <button type=\"submit\" className=\"myButton\">Create Account</button>\n                <small>Already have an account?</small>\n              </div>\n\n              </form>\n          </div>\n        </div>\n      )\n    } else if (this.state.submitta === 1) {\n      return (\n        <div className=\"form-wrapper\">\n          <div>\n            <h5>You have submitted. Please go to login.</h5>s\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"form-wrapper\">\n          <div>\n            <h4>error</h4>\n\n          </div>\n        </div>\n      )\n  }\n}\n}\n\nexport default Form\n","import React, { Component } from 'react'\nimport Form from './components/Form.js'\n// import Login from './components/Login.js'\n// import DatePicker from './components/DatePicker.js'\n\n\n\nclass Kmom03 extends Component {\n  render() {\n    return (<Form />\n    );\n\n  }\n\n}\n\nexport default Kmom03\n","import React, { Component } from 'react'\n\n\nclass Logg extends Component {\n  //Constructor\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      emailError: '',\n      passwordError: '',\n      adress: \"localhost:8333\",\n      data: null,\n      hits: [],\n      submitta: 0\n    };\n  }\n\n  // //PART 1\n  // //Checks if name is OK\n  // handleChangeName = (event) => {\n  //   this.setState({ name: event.target.value });\n  //   // console.log(this.state.name);\n  //\n  //   for (var i = 0; i < this.state.name.length; i++) {\n  //     if (isNaN(this.state.name[i]) === true) {\n  //       this.setState({ nameError: \"\" });\n  //     } else {\n  //       this.setState({ nameError: \"Endas bokstäver\" });\n  //       break;\n  //     }\n  //   }\n  // }\n\n  //Checks if email is OK\n  handleChangeEmail = (event) => {\n    // console.log(event.target.value);\n    this.setState({ email: event.target.value });\n    // console.log(this.state.email);\n\n    for (var i = 0; i < this.state.email.length; i++) {\n      if (this.state.email[i].includes(\"@\") !== true) {\n        this.setState({ emailError: \"Måste finnas @\" });\n      } else {\n        this.setState({ emailError: \"\" });\n        break;\n      }\n    }\n  }\n\n  //Checks if password is OK\n  handleChangePassword = (event) => {\n    // console.log(event.target.value);\n    this.setState({ password: event.target.value });\n    // console.log(this.state.password);\n    if (this.state.password.length > 11) {\n      this.setState({ passwordError: \"Max 10 bokstäver\" });\n    } else {\n      this.setState({ passwordError: \"\" });\n    }\n  }\n\n\n  //Executes on submit\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(\"-this.state\");\n    // console.log(this.state);\n    // console.log(\"-this.state\");\n\n    if (\n      this.state.emailError === \"\" &&\n      this.state.passwordError === \"\" &&\n      this.state.email !== \"\" &&\n      this.state.password !== \"\") {\n      this.computePost()\n\n    } else {\n      console.log(\"nein\");\n    }\n  }\n\n\n\n\n\n  async computePost() {\n    console.log(this.state.email);\n    console.log(this.state.password);\n    console.log(\"*XXXloginXXX*\");\n    //http://localhost:8333/logg\n    //https://webhook.site/7ec34c58-bff5-4050-9201-4f83ab6dd210\n    try {\n        await fetch('https://me-api.thisisabad.site/login', {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              email: this.state.email,\n              password: this.state.password\n            })\n        }).then((response) => response.json())\n    .then((responseData) => {\n      console.log(\"555555555555555555555555555555555555555555\");\n      this.submitted(responseData);\n\n    })\n    } catch(err) {\n        console.log(\"*error*\");\n        console.log(err);\n        console.log(\"**catch**\");\n        this.submitted_user_exist()\n    }\n  }\n\n\n  submitted(data) {\n    console.log(data);\n    console.log(data.token);\n    sessionStorage.setItem('token', data.token);\n    let testing = sessionStorage.getItem('token');\n    console.log(testing);\n    this.setState({\n      submitta: 1\n    })\n    this.forceUpdate();\n  }\n\n\n\n\n\n  // submit_form() {\n  //   console.log(\"yehawzzz!!!\");\n  //   console.log(this.state);\n  //   this.compPost()\n  //   console.log(\"yehawzzz!!!\");\n  // }\n\n\n\n\n  render() {\n\n\n    //Draws out the form\n    if (this.state.submitta === 0) {\n      return (\n        <div className=\"form-wrapper\">\n          <div>\n            <h4>Login</h4>\n            <form onSubmit={this.handleSubmit} noValidate method=\"post\">\n                <div className=\"email\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  className=\"mytext\"\n                  placehodler=\"Email\"\n                  name=\"email\"\n                  onChange={this.handleChangeEmail}\n                  value={this.state.email}\n                />\n                <div style={{ color: \"red\" }}>{this.state.emailError}</div>\n              </div>\n\n              <div className=\"password\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"mytext\"\n                  placehodler=\"Password\"\n                  name=\"password\"\n                  onChange={this.handleChangePassword}\n                />\n                <div style={{ color: \"red\" }}>{this.state.passwordError}</div>\n              </div>\n              <div className=\"createAccount\">\n\n                <button type=\"submit\" className=\"myButton\">Create Account</button>\n\n              </div>\n\n              </form>\n          </div>\n        </div>\n      )\n    } else if (this.state.submitta === 1) {\n      return (\n        <div className=\"form-wrapper\">\n          <div>\n            <h5>You have submitted. Please go to login.</h5>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"form-wrapper\">\n          <div>\n            <h4>error</h4>\n\n          </div>\n        </div>\n      )\n  }\n}\n}\n\nexport default Logg\n","import React, { Component } from 'react'\nimport Logg from './components/Logg.js'\n// import Login from './components/Login.js'\n// import DatePicker from './components/DatePicker.js'\n\n\n\nclass LoggaIn extends Component {\n  render() {\n    return (<Logg />\n    );\n\n  }\n\n}\n\nexport default LoggaIn\n","import React, { Component } from 'react'\nimport ReactMarkdown from 'react-markdown'\n\n\nclass CreateUpdate extends Component {\n  //Constructor\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      chosenYear: '1900',\n      chosenMonth: 'Januari',\n      chosenDay: '1',\n      nameError: '',\n      emailError: '',\n      passwordError: '',\n      submitError: '',\n      year: [],\n      month: [],\n      day: [],\n      adress: \"localhost:8333\",\n      data: null,\n      hits: [],\n      submitta: 0,\n      token: \"\"\n    };\n  }\n\n  //PART 1\n  //Checks if name is OK\n  handleChangeName = (event) => {\n    this.setState({ name: event.target.value });\n    // console.log(this.state.name);\n    this.setState({ nameError: \"\" });\n  }\n\n  //Checks if email is OK\n  handleChangeEmail = (event) => {\n    // console.log(event.target.value);\n    this.setState({ email: event.target.value });\n    // console.log(this.state.email);\n\n    for (var i = 0; i < this.state.email.length; i++) {\n      if (this.state.email[i].includes(\"@\") !== true) {\n        this.setState({ emailError: \"Måste finnas @\" });\n      } else {\n        this.setState({ emailError: \"\" });\n        break;\n      }\n    }\n  }\n\n  //Checks if password is OK\n  handleChangePassword = (event) => {\n    // console.log(event.target.value);\n    this.setState({ password: event.target.value });\n    // console.log(this.state.password);\n    if (this.state.password.length > 11) {\n      this.setState({ passwordError: \"Max 10 bokstäver\" });\n    } else {\n      this.setState({ passwordError: \"\" });\n    }\n  }\n\n  //Sets value for year\n  handleYear = (event) => {\n    this.setState({chosenYear: event.target.value});\n  }\n\n  //Sets value for month\n  handleMonth = (event) => {\n    this.setState({chosenMonth: event.target.value});\n  }\n\n  //Sets value for day\n  handleDay = (event) => {\n    this.setState({chosenDay: event.target.value});\n  }\n\n  //Executes on submit\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(\"-this.state\");\n    // console.log(this.state);\n    // console.log(\"-this.state\");\n\n    if (\n      this.state.nameError === \"\" &&\n      this.state.name !== \"\" )\n      {\n      this.computePost()\n\n    } else {\n      console.log(\"nein\");\n    }\n  }\n\n\n\n\n\n  async computePost() {\n    console.log(this.state.chosenDay);\n    console.log(this.state.name);\n    console.log(\"*ehh yo*\");\n    let week = this.state.chosenDay;\n    let text = this.state.name;\n    //http://localhost:8333/logg\n    //https://webhook.site/7ec34c58-bff5-4050-9201-4f83ab6dd210\n    try {\n        await fetch('https://me-api.thisisabad.site/reports/', {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              week: week,\n              text: text\n            })\n        }).then(this.submitted());\n    } catch(err) {\n        console.log(\"*error*\");\n        console.log(err);\n        console.log(\"**catch**\");\n    }\n  }\n\n\n  submitted() {\n    this.setState({\n      submitta: 1\n    })\n\n    this.forceUpdate();\n  }\n\n\n\n\n\n  // submit_form() {\n  //   console.log(\"yehawzzz!!!\");\n  //   console.log(this.state);\n  //   this.compPost()\n  //   console.log(\"yehawzzz!!!\");\n  // }\n\n  // //PART 2\n  // //Creates arrays with years and days\n  // componentDidMount() {\n  //\n  //\n  // }\n\n  componentDidMount() {\n    var varDay = [];\n\n\n    //creates data for the day list\n    for (let i = 1; i <= 10; i++) {\n        let x = 1;\n        varDay.push({id: x, name: i.toString()});\n        x++;\n    }\n    //creates data for the month lists\n    this.setState({\n      day: varDay\n    })\n    // Simple GET request using fetch\n    fetch('https://me-api.thisisabad.site/login/test_user')\n        .then(response => response.json())\n        .then(data => this.setState({ text: data.text, token: data.token }));\n  }\n\n  render() {\n    const { day } = this.state;\n\n    let dayList = day.map((item, i) => {\n      return (\n        <option key={i} value={item.name}>{item.name}</option>\n      )\n    });\n    let token_test = sessionStorage.getItem('token');\n    console.log(\"xxxxxxxxxxxxxmjauxxxxxxxxxxxxxxxxxx\");\n    console.log(token_test);\n    console.log(this.state.token); //<--------- denna är tom\n    console.log(\"xxxxxxxxxxxxxmjauxxxxxxxxxxxxxxxxxx\");\n    if (token_test === this.state.token && this.state.submitta === 0) {\n      return (\n        <div className=\"form-wrapper\">\n          <div>\n            <h4>Week</h4>\n            <form onSubmit={this.handleSubmit} noValidate method=\"post\">\n              <div className=\"date\">\n                <label htmlFor=\"date\">week</label>\n                <div>\n                  <select\n                    type=\"text\"\n                    className=\"myDate\"\n                    onChange={this.handleDay}\n                  >\n                    {dayList}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"name\">\n                <label htmlFor=\"name\">Text</label>\n                <input\n                  type=\"text\"\n                  className=\"mytext\"\n                  placehodler=\"Name\"\n                  name=\"name\"\n                  onChange={this.handleChangeName}\n                  value={this.state.name}\n                />\n                <div style={{ color: \"red\" }}>{this.state.nameError}</div>\n              </div>\n\n\n              <div className=\"createAccount\">\n\n                <button type=\"submit\" className=\"myButton\">Create / update</button>\n\n              </div>\n\n              </form>\n          </div>\n        </div>\n      )\n    } else if (token_test === this.state.token && this.state.submitta === 1) {\n        return (\n        <div className=\"content\">\n          <ReactMarkdown source=\"Alert!\" />\n          <ReactMarkdown source=\"Week was CREATED or UPDATED in the database!\" />\n        </div>\n      )\n\n    } else {\n      return (\n      <div className=\"content\">\n        <ReactMarkdown source=\"Alert!\" />\n        <ReactMarkdown source=\"Please Loggin!\" />\n      </div>\n    )\n    }\n  }\n}\n\nexport default CreateUpdate\n          // <ReactMarkdown source={this.state.text} />\n","import React from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\nimport Me from './Me.js';\nimport Report from './Report.js';\nimport Report2 from './Report2.js';\nimport Report3 from './Report3.js';\nimport Kmom03 from './Kmom03.js';\n\nimport LoggaIn from './LoggaIn.js';\nimport CreateUpdate from './components/CreateUpdate.js';\n\nimport './App.css';\n\n\nconst App = () => (\n  <Router>\n    <div className=\"App\">\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Me</Link>\n          </li>\n          <li>\n            <Link to=\"/report/week/1\">Kmom01</Link>\n          </li>\n          <li>\n            <Link to=\"/report/week/2\">Kmom02</Link>\n          </li>\n          <li>\n            <Link to=\"/report/week/3\">Kmom03</Link>\n          </li>\n          <li>\n            <Link to=\"/register\">Register</Link>\n          </li>\n          <li>\n            <Link to=\"/login\">Login</Link>\n          </li>\n          <li>\n            <Link to=\"/crud\">+week</Link>\n          </li>\n\n        </ul>\n      </nav>\n      <Route exact path=\"/\" component={Me} />\n      <Route exact path=\"/report/week/1\" component={Report} />\n      <Route exact path=\"/report/week/2\" component={Report2} />\n      <Route exact path=\"/report/week/3\" component={Report3} />\n      <Route exact path=\"/register\" component={Kmom03} />\n      <Route exact path=\"/login\" component={LoggaIn} />\n      <Route exact path=\"/crud\" component={CreateUpdate} />\n\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}